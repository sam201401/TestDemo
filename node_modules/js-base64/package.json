{
  "_args": [
    [
      {
        "raw": "js-base64@^2.1.9",
        "scope": null,
        "escapedName": "js-base64",
        "name": "js-base64",
        "rawSpec": "^2.1.9",
        "spec": ">=2.1.9 <3.0.0",
        "type": "range"
      },
      "/Users/sameer/testdemo/node_modules/postcss"
    ]
  ],
  "_from": "js-base64@^2.1.9",
  "_hasShrinkwrap": false,
  "_id": "js-base64@2.6.4",
  "_location": "/js-base64",
  "_nodeVersion": "14.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/js-base64_2.6.4_1596433577942_0.7728827936385398"
  },
  "_npmUser": {
    "name": "dankogai",
    "email": "dankogai+github@gmail.com"
  },
  "_npmVersion": "6.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "js-base64@^2.1.9",
    "scope": null,
    "escapedName": "js-base64",
    "name": "js-base64",
    "rawSpec": "^2.1.9",
    "spec": ">=2.1.9 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/postcss"
  ],
  "_resolved": "https://registry.npmjs.org/js-base64/-/js-base64-2.6.4.tgz",
  "_shasum": "f4e686c5de1ea1f867dbcad3d46d969428df98c4",
  "_shrinkwrap": null,
  "_spec": "js-base64@^2.1.9",
  "_where": "/Users/sameer/testdemo/node_modules/postcss",
  "author": {
    "name": "Dan Kogai"
  },
  "bugs": {
    "url": "https://github.com/dankogai/js-base64/issues"
  },
  "dependencies": {},
  "description": "Yet another Base64 transcoder in pure-JS",
  "devDependencies": {
    "@babel/core": "^7.10.5",
    "@babel/preset-env": "^7.10.5",
    "@babel/register": "^7.10.5",
    "mocha": "^8.0.0",
    "uglify-js": "^3.10.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-pZe//GGmwJndub7ZghVHz7vjb2LgC1m8B07Au3eYqeqv9emhESByMXxaEgkUkEqJe87oBbSniGYoQNIBklc7IQ==",
    "shasum": "f4e686c5de1ea1f867dbcad3d46d969428df98c4",
    "tarball": "https://registry.npmjs.org/js-base64/-/js-base64-2.6.4.tgz",
    "fileCount": 5,
    "unpackedSize": 18962,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfJ6SqCRA9TVsSAnZWagAAxVEP/ibNS1Xn3vjrSFExm8us\nbZviWrjhjtlCPy9AkfJwhKkch7sRowggo1H0rifLNCD2kmiS/tyF5g3IWATM\no8QrgvDx7NmTCuD1wYYDeeknpTyazTi5VT9sc1zdMbhsSgg5/1Bx8Gvkvnd7\nfX45S8xlg5fAPpzJCVkmnJbQh6IYh0X/tjoaxFQrTgps6tCzIqnl1f0/2oZM\ncZv1x5yNJYgdrfrJLl4u9prdsTjq5yiMWOmi9kYmRlLI8EQEPvb2MPbLTwJh\nf9K2T5uKrVUt+oR/y7MA63JCnidnWxRwVZfPma9Z0K84pnSCSJYd7uB8/GxG\nMN7YGlX789SYqbfhbemME8zCtXynmhHNukEMyf4peXuTqqt87+ERj6swwHLU\nNNZKc5GbKLvtvW2P6y9w5WfV8g40Ud3RfFuTwHZo8JI6AXYJr8PgkvCyImcd\nxooT7x+70iIybifzFfJf/+Cdgm0l30EOy2gXIGJeJUtX15NztaM44aPdNW+u\nr9TZ2XFfIuCNRl4kDYeZCvRs8aytrA4a+CPht9W7WH1qZpppKPwLrsvk03FU\nKQs6rqbhcgalxHAbQSPM0b3KyTnm+/qLdf2rgt68TYT6eRQ/T2ep693k1rRr\nYE/ci3wDK5cknSN8uiJqJS202s1BNcCEKPKy8simkeY57rZnvRud4lDTjasP\nRsE9\r\n=kwzT\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "base64.js",
    "base64.min.js"
  ],
  "gitHead": "8bfa436f733bec60c95c720e1d720c28b43ae0b2",
  "homepage": "https://github.com/dankogai/js-base64#readme",
  "keywords": [
    "base64"
  ],
  "license": "BSD-3-Clause",
  "main": "base64.js",
  "maintainers": [
    {
      "name": "dankogai",
      "email": "dankogai+github@gmail.com"
    }
  ],
  "name": "js-base64",
  "optionalDependencies": {},
  "readme": "[![build status](https://secure.travis-ci.org/dankogai/js-base64.png)](http://travis-ci.org/dankogai/js-base64)\n\n# base64.js\n\nYet another Base64 transcoder\n\n## Usage\n\n### Install\n\n```javascript\n$ npm install --save js-base64\n```\n\nIf you are using it on ES6 transpilers, you may also need:\n\n```javascript\n$ npm install --save babel-preset-env\n```\n\nNote `js-base64` itself is stand-alone so its `package.json` has no `dependencies`.  However, it is also tested on ES6 environment so `\"babel-preset-env\": \"^1.7.0\"` is on `devDependencies`.\n\n\n### In Browser\n\n* Locally\n\n```html\n<script src=\"base64.js\"></script>\n```\n\n* Directly from CDN.  In which case you don't even need to install.\n\n```html\n<!-- the latest -->\n<script src=\"https://cdn.jsdelivr.net/npm/js-base64/base64.min.js\">\n```\n\n```html\n<!-- with version fixed -->\n<script src=\"https://cdn.jsdelivr.net/npm/js-base64@2.6.4/base64.min.js\">\n```\n\n### node.js\n\n```javascript\nvar Base64 = require('js-base64').Base64;\n```\n\n## es6+\n\n```javascript\nimport { Base64 } from 'js-base64';\n```\n\n## SYNOPSIS\n\n```javascript\nBase64.encode('dankogai'); // ZGFua29nYWk=\nBase64.btoa(  'dankogai'); // ZGFua29nYWk=\nBase64.fromUint8Array(     // ZGFua29nYWk=\n    new Uint8Array([100,97,110,107,111,103,97,105])\n);\nBase64.fromUint8Array(     // ZGFua29nYW which is URI safe\n    new Uint8Array([100,97,110,107,111,103,97,105]), true\n);\nBase64.encode(   '小飼弾'); // 5bCP6aO85by+\nBase64.encodeURI('小飼弾'); // 5bCP6aO85by- which equals to Base64.encode('小飼弾', true)\nBase64.btoa(     '小飼弾'); // raises exception \n```\n\n```javascript\nBase64.decode('ZGFua29nYWk=');  // dankogai\nBase64.atob(  'ZGFua29nYWk=');  // dankogai\nBase64.toUint8Array(            // new Uint8Array([100,97,110,107,111,103,97,105])\n    'ZGFua29nYWk='\n);\nBase64.decode('5bCP6aO85by+');  // 小飼弾\n// note .decodeURI() is unnecessary since it accepts both flavors\nBase64.decode('5bCP6aO85by-');  // 小飼弾\nBase64.atob(  '5bCP6aO85by+');  // 'å°é£¼å¼¾' which is nonsense\n```\n\n### String Extension for ES5\n\n```javascript\nif (Base64.extendString) {\n    // you have to explicitly extend String.prototype\n    Base64.extendString();\n    // once extended, you can do the following\n    'dankogai'.toBase64();        // ZGFua29nYWk=\n    '小飼弾'.toBase64();           // 5bCP6aO85by+\n    '小飼弾'.toBase64(true);       // 5bCP6aO85by-\n    '小飼弾'.toBase64URI();        // 5bCP6aO85by-\n    'ZGFua29nYWk='.fromBase64();  // dankogai\n    '5bCP6aO85by+'.fromBase64();  // 小飼弾\n    '5bCP6aO85by-'.fromBase64();  // 小飼弾\n}\n```\n\n### TypeScript\n\nTypeScript 2.0 type definition was added to the [DefinitelyTyped repository](https://github.com/DefinitelyTyped/DefinitelyTyped).\n\n```bash\n$ npm install --save @types/js-base64\n```\n\n## `.decode()` vs `.atob` (and `.encode()` vs `btoa()`)\n\nSuppose you have:\n\n```\nvar pngBase64 = \n  \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII=\";\n```\n\nWhich is a Base64-encoded 1x1 transparent PNG, **DO NOT USE** `Base64.decode(pngBase64)`.  Use `Base64.atob(pngBase64)` instead.  `Base64.decode()` decodes to UTF-8 string while `Base64.atob()` decodes to bytes, which is compatible to browser built-in `atob()` (Which is absent in node.js).  The same rule applies to the opposite direction.\n\n\n## SEE ALSO\n\n+ http://en.wikipedia.org/wiki/Base64\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dankogai/js-base64.git"
  },
  "scripts": {
    "minify": "uglifyjs base64.js > base64.min.js",
    "test": "mocha --require @babel/register"
  },
  "version": "2.6.4"
}
